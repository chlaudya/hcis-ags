{"version":3,"sources":["../node_modules/@material-ui/unstyled/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@material-ui/core/ListSubheader/listSubheaderClasses.js","../node_modules/@material-ui/core/ListSubheader/ListSubheader.js","../node_modules/@material-ui/core/internal/svg-icons/Close.js","../node_modules/@material-ui/core/Autocomplete/autocompleteClasses.js","../node_modules/@material-ui/core/Autocomplete/Autocomplete.js"],"names":["stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","pageSize","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","disabledProp","disabled","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_option$label","label","_props$isOptionEqualT","isOptionEqualToValue","value","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","React","firstFocus","inputRef","listboxRef","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","_React$useState3","_React$useState4","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","default","name","_useControlled2","setValueState","_useControlled3","state","_useControlled4","setInputValueState","_React$useState5","_React$useState6","focused","setFocused","resetInputValue","event","newValue","newInputValue","prevValue","valueChange","current","_useControlled5","_useControlled6","setOpenState","_React$useState7","_React$useState8","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","concat","setHighlightedIndex","_ref2","index","_ref2$reason","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart","getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","overridesResolver","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","ListSubheader","inProps","useThemeProps","className","_props$color","_props$component","component","_props$disableGutters","_props$disableSticky","_props$inset","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","createSvgIcon","d","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","_defineProperty","tag","inputRoot","_ref6","_extends2","_$concat","_MuiOutlinedInput","_MuiFilledInputRo","_extends3","clearIndicator","visibility","width","margin","maxWidth","flexWrap","minWidth","paddingBottom","padding","endAdornment","right","paddingTop","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","_ref7","popupIndicator","popupIndicatorOpen","_ref8","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","_ref10","modal","AutocompletePaper","Paper","_ref11","body1","overflow","AutocompleteLoading","loading","_ref12","AutocompleteNoOptions","noOptions","_ref13","AutocompleteListbox","listbox","_ref14","_ariaSelectedTru","_$concat2","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","focusVisible","alpha","selectedOpacity","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","_ref16","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","startAdornment","ChipProps","_props$clearIcon","clearIcon","ClearIcon","_props$clearText","clearText","_props$closeText","closeText","_props$componentsProp","componentsProps","_props$disabled","_props$disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","_props$PopperComponen","PopperComponent","_props$popupIcon","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","_useAutocomplete","getCustomizedTagProps","params","map","Chip","children","_jsxs","props2","renderListOption","optionProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/6.5114b04d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@material-ui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\n\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: theme.palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: theme.palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: theme.palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListSubheader;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  '& .MuiInput-root': {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  '& .MuiInput-root.MuiInputBase-sizeSmall': {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  '& .MuiOutlinedInput-root': {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  '& .MuiFilledInput-root': {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    '& .MuiFilledInput-input': {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiFilledInput-root.MuiInputBase-sizeSmall': {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: theme.zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              ownerState: ownerState,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        ownerState: ownerState,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['Material-UI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}